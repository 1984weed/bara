extend type Query {
  contests(limit: Int = 25, offset: Int  = 0): [Contest!]!
  contest(slug: String!): Contest!
}

extend type Mutation {
  createContest(newContest: NewContest!): Contest!
  updateContest(contestID: ID!, newContest: NewContest!): Contest!
  deleteContest(slug: String!): Boolean
  startCalculateRanking(slug: String!): Ranking
}

type Ranking {
  rank: Int!
  user: User!
  problemSubmitResult: ProblemSubmitResult!
}

type ProblemSubmitResult {
  problem: Problem!
  status: String!
  completedTime: String!
}

extend type Problem {
  score: Int!
}

type Contest {
  id: ID!
  slug: String!
  title: String!
  startTimestamp: String!
  duration: String
  problems: [Problem!]
}

input NewContest {
  slug: String!
  title: String!
  startTimestamp: String!
  duration: String
  problemIDs: [ID!]
}